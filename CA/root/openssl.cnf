[ ca ]
# `man ca`

# You could ommit this section and create two seperate name spaces in this file 
# so there is one configuration for both the root and intermediate certificates.
# you would add the -name flag to the openssl ca command to choose between the 
# two; however, best practice mandaites that your root certificate should remain
# inaccessable so to simply this option is included.
# Note: the name space may not be CA
default_ca = root

# This is the default CA name space
[ root ]
# Directory and file locations. DIR will be the root directory for all CA files
dir               = ./root

new_certs_dir     = $dir/newcerts
database          = $dir/index.txt
serial            = $dir/serial
RANDFILE          = $dir/private/.rand

# The root key and root certificate.
private_key       = $dir/private/intermediate.key
certificate       = $dir/certs/intermediate.crt

# For certificate revocation lists.
crlnumber         = $dir/crlnumber
crl               = $dir/crl/intermediate.crl
crl_extensions    = crl_ext
default_crl_days  = 365

# SHA-1 is deprecated, so use SHA-2 instead.
default_md        = sha256

name_opt          = ca_default
cert_opt          = ca_default
default_days      = 375
preserve          = no

# This specifies which policy to use
policy            = policy_strict
copy_extensions   = none

[ policy_strict ]
# The root CA should only sign intermediate certificates that match.
# See the POLICY FORMAT section of `man ca`.
countryName             = match
stateOrProvinceName     = match
organizationName        = match
organizationalUnitName  = optional
commonName              = supplied
emailAddress            = optional
localityName            = supplied


[ req ]
# Options for the `req` tool (`man req`).
# Using the req tool is not recommended without using a config file as
# the x509 extenstions are not prompted for.
default_bits        = 4096
distinguished_name  = req_dn
extensions          = req_ext
string_mask         = utf8only

# SHA-1 is deprecated, so use SHA-2 instead.
default_md          = sha256

# Extension to add when the -x509 option is used.
x509_extensions     = req_extv3_root

[ req_dn ]
# See <https://en.wikipedia.org/wiki/Certificate_signing_request>.
countryName                     = Country Name (2 letter code)
stateOrProvinceName             = State or Province Name
localityName                    = City or County
0.organizationName              = Organization Name
organizationalUnitName          = Organizational Unit Name
commonName                      = Common Name
emailAddress                    = Email Address

# Optionally, specify some defaults.
countryName_default             = CA
stateOrProvinceName_default     = Saskatchewan
#localityName_default            = Regina
#0.organizationName_default      = 
#organizationalUnitName_default  =
#emailAddress_default            =

[ req_ext ]
subjectAltName                  = SAN (dns:domain,...)

[ req_extv3_root ]
# Extensions for a typical CA (`man x509v3_config`).
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid:always,issuer
basicConstraints = critical, CA:true
keyUsage = critical, digitalSignature, cRLSign, keyCertSign


[ req_extv3_intermediate ]
# Extensions for a typical intermediate CA (`man x509v3_config`).
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid:always,issuer
basicConstraints = critical, CA:true, pathlen:0
keyUsage = critical, digitalSignature, cRLSign, keyCertSign
crlDistributionPoints=crl_root

[ crl_ext ]
# Extension for CRLs (`man x509v3_config`).
authorityKeyIdentifier=keyid:always

[ crl_root ]
fullname=URI:http://example.com/crl/root.crl
CRLissuer=dirName:crl_issu_root
resons=keyCompromise,CACompromise

[ crl_issu_root ] 
C=<2 letter country code>
O=<Orginization>
CN=<Common Name of Issuer>
